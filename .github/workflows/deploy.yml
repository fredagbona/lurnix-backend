- name: Remote deploy (git pull, migrate, build, reload)
  run: |
    ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} bash -lc '
      set -euo pipefail

      PROJECT_DIR="/var/www/lurnix/lurnix-backend"
      cd "$PROJECT_DIR"

      # Ensure .env link points to shared
      ln -sfn "$PROJECT_DIR/shared/.env" .env

      # Make sure we are on prod branch and get latest
      if [ ! -d .git ]; then
        echo "ERROR: $PROJECT_DIR is not a git repository."
        exit 1
      fi
      git fetch --all --prune
      git checkout prod
      git reset --hard origin/prod

      # If you use nvm on the server, uncomment these 3 lines:
      # export NVM_DIR="$HOME/.nvm"
      # [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      # nvm use --lts >/dev/null 2>&1 || true

      # Install deps deterministically
      npm ci

      # Prisma (prod-safe migrate)
      npx prisma generate
      npm run db:migrate || npx prisma migrate deploy

      # Optional seed (reads from GH secret; defaults empty)
      SEED="${SEED:-}"
      if [ "$SEED" = "true" ]; then
        echo "Running seed..."
        npm run db:seed || echo "Seed failed or skipped."
      fi

      # Build (postbuild should copy templates; fallback provided)
      npm run build
      [ -d src/services/templates ] && cp -r src/services/templates dist/services || true

      # PM2 start or reload
      if pm2 describe lurnix-backend >/dev/null 2>&1; then
        pm2 reload lurnix-backend --update-env
      else
        pm2 start ecosystem.config.js --env production
      fi

      pm2 save

      echo "âœ… Deploy complete."
      pm2 status | sed -n "1,20p"
    '
