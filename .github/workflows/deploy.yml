name: Deploy lurnix-backend

on:
  push:
    branches:
      - prod

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (for metadata only)
        uses: actions/checkout@v4

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/known_hosts

      - name: Remote deploy (git pull, migrate, build, reload)
        run: |
          ssh "${{ secrets.DEPLOY_USER }}"@"${{ secrets.DEPLOY_HOST }}" SEED="${{ secrets.SEED }}" bash -lc 'set -euo pipefail
            PROJECT_DIR="/var/www/lurnix/lurnix-backend"
            cd "$PROJECT_DIR"

            # Ensure .env symlink points to shared
            ln -sfn "$PROJECT_DIR/shared/.env" .env

            # Git update to prod
            if [ ! -d .git ]; then
              echo "ERROR: $PROJECT_DIR is not a git repository."
              exit 1
            fi
            git fetch --all --prune
            git checkout prod
            git reset --hard origin/prod

            # If node is installed via nvm, make it available in non-login shell
            if [ -s "$HOME/.nvm/nvm.sh" ]; then
              . "$HOME/.nvm/nvm.sh"
              nvm use --lts >/dev/null 2>&1 || true
            fi

            # Install deps deterministically
            npm ci

            # Prisma (prod-safe)
            npx prisma generate
            npm run db:migrate || npx prisma migrate deploy

            # Optional seed (set SEED repo secret to "true" to enable)
            if [ "${SEED:-}" = "true" ]; then
              echo "Running seed..."
              npm run db:seed || echo "Seed failed or skipped."
            fi

            # Build (postbuild should copy templates; keep fallback)
            npm run build
            [ -d src/services/templates ] && cp -r src/services/templates dist/services || true

            # PM2 start or reload
            if pm2 describe lurnix-backend >/dev/null 2>&1; then
              pm2 reload lurnix-backend --update-env
            else
              pm2 start ecosystem.config.js --env production
            fi
            pm2 save

            echo "âœ… Deploy complete."
            pm2 status | sed -n "1,20p"
          '
